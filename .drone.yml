---
kind: pipeline
type: kubernetes
name: testing

platform:
  arch: amd64
  os: linux

steps:
- name: restore-cache
  image: meltwater/drone-cache
  pull: always
  settings:
    restore: true
    backend: filesystem
    mount: [ "vendor" ]
  volumes:
    - name: cache
      path: /tmp/cache

- name: test-golang1.22
  image: golang:1.22
  pull: always
  environment:
    CGO_ENABLED: 0
  commands:
  - make vendor
  - make test

- name: rebuild-cache
  image: meltwater/drone-cache
  pull: always
  settings:
    rebuild: true
    backend: filesystem
    mount: [ "vendor" ]
  volumes:
    - name: cache
      path: /tmp/cache

volumes:
- name: cache
  host:
    path: /var/drone/cache/gits

---

kind: pipeline
type: kubernetes
name: release-binaries

depends_on:
- testing

platform:
  arch: amd64
  os: linux

trigger:
  ref:
  - refs/tags/**

steps:
- name: restore-cache
  image: meltwater/drone-cache
  pull: always
  settings:
    restore: true
    backend: filesystem
    mount: [ "vendor" ]
  volumes:
    - name: cache
      path: /tmp/cache

- name: build-all-binary
  image: golang:1.22
  pull: always
  commands:
  - make VERSION=${DRONE_TAG} info
  - make VERSION=${DRONE_TAG} -j2
  environment:
    CGO_ENABLED: 0
    GOCACHE: "/drone/src/.cache"
  when:
    event: [ tag ]

- image: plugins/github-release
  name: deploy-all-binary
  pull: always
  settings:
    api_key:
      from_secret: gits_github_release_api_key
    files:
    - bin/release/*
  when:
    event: [ tag ]

- name: rebuild-cache
  image: meltwater/drone-cache
  pull: always
  settings:
    rebuild: true
    backend: filesystem
    mount: [ "vendor" ]
  volumes:
    - name: cache
      path: /tmp/cache

volumes:
- name: cache
  host:
    path: /var/drone/cache/gits

---
kind: secret
name: gits_github_release_api_key
get:
  path: gits-ci
  name: GITHUB_TOKEN
